-- Type: account_type
DROP TYPE IF EXISTS public.account_type;
CREATE TYPE public.account_type AS ENUM(
  'Client', 
  'Employee', 
  'Admin');

-- Table structure for table `blog`
CREATE TABLE IF NOT EXISTS public.blog
(
  blog_id INT GENERATED BY DEFAULT AS IDENTITY,
  blog_title CHARACTER VARYING NOT NULL,
  blog_content TEXT NOT NULL,
  blog_created DATE NOT NULL DEFAULT now()::DATE,
  CONSTRAINT blog_pkey PRIMARY KEY (blog_id)
);

-- Table structure for table `keyword`
CREATE TABLE IF NOT EXISTS public.keyword
(
  keyword_id INT GENERATED BY DEFAULT AS IDENTITY,
  keyword CHARACTER VARYING NOT NULL,
  CONSTRAINT keyword_pkey PRIMARY KEY (keyword_id)
);

CREATE TABLE blog_keyword (
  blog_id INT,
  keyword_id INT,
  PRIMARY KEY (blog_id, keyword_id),
  CONSTRAINT fk_blog FOREIGN KEY(blog_id) REFERENCES blog(blog_id),
  CONSTRAINT fk_keyword FOREIGN KEY(keyword_id) REFERENCES keyword(keyword_id)
);

-- Table structure for table `account`
CREATE TABLE IF NOT EXISTS public.account
(
  account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  account_firstname character varying NOT NULL,
  account_lastname character varying NOT NULL,
  account_email character varying NOT NULL,
  account_password character varying NOT NULL,
  account_type account_type NOT NULL DEFAULT 'Client'::account_type,
  CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

-- Data for table 'account'
INSERT INTO public.classification (account_firstname, account_lastname, account_email, account_password, account_type)
VALUES 
  ('Jojo', 'Johnson', 'emmaohn00@gmail.com', 'password', 'Admin'),
  ('Trudy', 'Johnson', 'trudyjohnson@me.com', 'password', 'Admin');

-- Data for table 'blog'
INSERT INTO public.classification (classification_name)
VALUES 
  ;