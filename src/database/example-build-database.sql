-- Type: account_type
DROP TYPE IF EXISTS public.account_type;
CREATE TYPE public.account_type AS ENUM(
  'Client', 
  'Employee', 
  'Admin');

-- owner name may change based on database username
ALTER TYPE public.account_type
  OWNER TO edbab;

-- Table structure for table `classification`
CREATE TABLE public.classification (
	classification_id INT GENERATED BY DEFAULT AS IDENTITY,
	classification_name CHARACTER VARYING NOT NULL,
	CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- Table structure for table `inventory`
CREATE TABLE IF NOT EXISTS public.inventory 
(
	inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	inv_make character varying NOT NULL,
	inv_model character varying NOT NULL,
	inv_year character(4) NOT NULL,
	inv_description text NOT NULL,
	inv_image character varying NOT NULL,
	inv_thumbnail character varying NOT NULL,
	inv_price numeric(9, 0) NOT NULL,
	inv_miles integer NOT NULL,
	inv_color character varying NOT NULL,
	classification_id integer NOT NULL,
	CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);

-- Create relationship between 'classification' and 'inventory' tables
ALTER TABLE IF EXISTS public.inventory
	ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id)
	REFERENCES public.classification (classification_id) MATCH SIMPLE
	ON UPDATE CASCADE
	ON DELETE NO ACTION;

-- Table structure for table `account`
CREATE TABLE IF NOT EXISTS public.account
(
  account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  account_firstname character varying NOT NULL,
  account_lastname character varying NOT NULL,
  account_email character varying NOT NULL,
  account_password character varying NOT NULL,
  account_type account_type NOT NULL DEFAULT 'Client'::account_type,
  CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

-- MESSAGE START
-- Table structure for table `message`
CREATE TABLE IF NOT EXISTS public.message
(
    message_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    message_to integer NOT NULL,
    message_from integer NOT NULL,
    message_subject character varying COLLATE pg_catalog."default" NOT NULL,
    message_body text COLLATE pg_catalog."default" NOT NULL,
    message_created timestamp with time zone NOT NULL DEFAULT now(),
    message_read boolean NOT NULL DEFAULT false,
    message_archived boolean NOT NULL DEFAULT false,
    CONSTRAINT message_pkey PRIMARY KEY (message_id)
);

-- Create relationship between columns 'message_to' and 'account_id'
ALTER TABLE IF EXISTS public.message
    ADD CONSTRAINT message_to_fk FOREIGN KEY (message_to)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

-- Create relationship between columns 'message_from' and 'account_id'
ALTER TABLE IF EXISTS public.message
    ADD CONSTRAINT message_from_fk FOREIGN KEY (message_from)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
-- MESSAGE END

-- Data for table 'classification'
INSERT INTO public.classification (classification_name)
VALUES ('Custom'),
	('Sport'),
	('SUV'),
	('Truck'),
	('Sedan');
